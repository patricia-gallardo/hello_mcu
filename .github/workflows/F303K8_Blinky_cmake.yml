name: CMake Ninja

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

env:
  WORK_DIR: STM32_F303K8/STM32_F303K8_Blinky

jobs:
  build:
    name: "${{ matrix.conf.name }} | ${{ matrix.cmake-build-type }}"
    runs-on: ${{ matrix.conf.os }}
    strategy:
      fail-fast: false
      matrix:
        conf:
          - name: Windows 2019
            os: windows-2019
            toolchain_root_dir: "C:/Program Files (x86)/GNU Arm Embedded Toolchain/"
            toolchain_dir: "C:/Program Files (x86)/GNU Arm Embedded Toolchain/10 2020-q4-major/bin"
            host_executable_suffix: ".exe"
          - name: Ubuntu 20.04
            os: ubuntu-20.04
            toolchain_dir: "/usr/bin"
            host_executable_suffix: ""
          - name: MacOS 10.15
            os: macos-10.15
            toolchain_dir: "/usr/local/bin"
            host_executable_suffix: ""
        cmake-build-type: [ Debug, Release ]

    steps:
      - uses: actions/checkout@v2
      - uses: turtlesec-no/get-ninja@1.0.0
      
      - name: Get Arm Toolchain
        id: arm
        uses: turtlesec-no/get-arm-toolchain@main

      - name: Did we get Arm Toolchain?
        run: echo "Arm Toolchain version was '${{ steps.arm.outputs.version }}'"

      - name: Where is the Arm Toolchain?
        shell: bash
        run: |
          echo "Arm Toolchain is at '${{ steps.arm.outputs.install_dir }}'"
          echo "TOOLCHAIN_DIR=${{ steps.arm.outputs.install_dir }}" >> $GITHUB_ENV

      - name: Test the toolchain
        shell: bash
        working-directory: "${{ env.TOOLCHAIN_DIR }}"
        run: ./arm-none-eabi-gcc${{ matrix.conf.host_executable_suffix}} --version

      - name: Configure CMake
        shell: bash
        working-directory: "${{ env.WORK_DIR }}"
        run: cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.cmake-build-type }} -DARM_TOOLCHAIN_DIR="${{ env.TOOLCHAIN_DIR }}" -DCMAKE_MAKE_PROGRAM=ninja${{ matrix.conf.host_executable_suffix}}  -G "Ninja"

      - name: Build
        shell: bash
        working-directory: "${{ env.WORK_DIR }}"
        run: cmake --build build --config ${{ matrix.cmake-build-type }}

      - name: Test
        shell: bash
        working-directory: "${{ env.WORK_DIR }}/build"
        run: ctest -C ${{ matrix.cmake-build-type }}
