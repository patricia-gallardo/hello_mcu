name: CMake Ninja

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build:
    name: "${{ matrix.conf.name }} | ${{ matrix.cmake-build-type }}"
    runs-on: ${{ matrix.conf.os }}
    strategy:
      fail-fast: false
      matrix:
        conf:
          - name: Windows 2019
            os: windows-2019
            host_executable_suffix: ".exe"
          - name: Ubuntu 20.04
            os: ubuntu-20.04
            host_executable_suffix: ""
          - name: MacOS 11
            os: macos-11
            host_executable_suffix: ""
          - name: MacOS 12
            os: macos-12
            host_executable_suffix: ""
        cmake-build-type: [ Debug, Release ]

    steps:
      - uses: actions/checkout@v3
      - uses: turtlesec-no/get-ninja@main
      
      - name: Get Arm Toolchain
        id: arm
        uses: turtlesec-no/get-arm-toolchain@main

      - name: Test the toolchain
        shell: bash
        working-directory: "${{ steps.arm.outputs.install_dir }}"
        run: ./arm-none-eabi-gcc${{ matrix.conf.host_executable_suffix}} --version

      - name: Configure CMake
        shell: bash
        run: cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.cmake-build-type }} -DARM_TOOLCHAIN_DIR="${{ steps.arm.outputs.install_dir }}" -DCMAKE_MAKE_PROGRAM=ninja${{ matrix.conf.host_executable_suffix}}  -G "Ninja"

      - name: Build
        shell: bash
        run: cmake --build build --config ${{ matrix.cmake-build-type }}

      - name: Test
        shell: bash
        working-directory: build
        run: ctest -C ${{ matrix.cmake-build-type }}
